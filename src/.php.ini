; If your server is not already configured as such, the following directive
; should be uncommented in order to set PHP's register_globals option to OFF.
; This closes a major security hole that is abused by most XSS (cross-site
; scripting) attacks. For more information: http://php.net/register_globals
;
; IF REGISTER_GLOBALS DIRECTIVE CAUSES 500 INTERNAL SERVER ERRORS :
;
; Your server does not allow PHP directives to be set via .htaccess. In that
; case you must make this change in your php.ini file instead. If you are
; using a commercial web host, contact the administrators for assistance in
; doing this. Not all servers allow local php.ini files, and they should
; include all PHP configurations (not just this one), or you will effectively
; reset everything to PHP defaults. Consult www.php.net for more detailed
; information about setting PHP directives.

; register_globals = Off

; Rename session cookie to something else, than PHPSESSID
; session.name = sid

; Do not show you are using PHP
; Note: Move this line to php.ini since it won't work in .htaccess
; expose_php = Off

; Level of log detail - log all errors
; error_reporting = 6143

; Write errors to log file
; log_errors = On

; Do not display errors in browser (production - Off, development - On)
display_errors = Off

; Do not display startup errors (production - Off, development - On)
display_startup_errors = Off

; Format errors in plain text
; Note: Leave this setting 'On' for xdebug's var_dump() output
; html_errors = Off

; Show multiple occurrence of error
; ignore_repeated_errors = Off

; Show same errors from different sources
; ignore_repeated_source = Off

; Size limit for error messages
; log_errors_max_len = 1024

; Don't precede error with string (doesn't accept empty string, use whitespace if you need)
; error_prepend_string " = "

; Don't prepend to error (doesn't accept empty string, use whitespace if you need)
; error_append_string " = "

; Increase cookie security
session.cookie_httponly = true
